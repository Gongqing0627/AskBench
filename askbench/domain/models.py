"""Domain models for the AskBench QnA generation framework."""
from __future__ import annotations

from dataclasses import dataclass, field
from typing import Iterable, List, Optional


@dataclass(slots=True)
class Document:
    """Represents a source document used for QnA generation."""

    doc_id: str
    title: str
    content: str
    metadata: dict[str, str] | None = None


@dataclass(slots=True)
class DocumentChunk:
    """A semantically coherent chunk extracted from a document."""

    document_id: str
    chunk_id: str
    text: str
    page_numbers: Iterable[int] | None = None
    metadata: dict[str, str] | None = None


@dataclass(slots=True)
class QuestionCandidate:
    """Represents a raw candidate generated by an LLM."""

    question_id: str
    prompt_id: str
    question: str
    options: list[str]
    correct_answer_index: int
    source_chunk_ids: list[str] = field(default_factory=list)
    rationale: Optional[str] = None
    metadata: dict[str, str] | None = None


@dataclass(slots=True)
class ValidationResult:
    """Details about automated validation of a candidate question."""

    question_id: str
    is_valid: bool
    errors: List[str] = field(default_factory=list)
    warnings: List[str] = field(default_factory=list)
    score: float | None = None


@dataclass(slots=True)
class ValidatedQuestion:
    """A high-quality question that passed automated validation steps."""

    candidate: QuestionCandidate
    validation: ValidationResult


@dataclass(slots=True)
class Cluster:
    """Groups similar questions for deduplication and coverage analysis."""

    cluster_id: str
    question_ids: list[str]
    centroid: Optional[list[float]] = None
    metadata: dict[str, str] | None = None


@dataclass(slots=True)
class ClusterSummary:
    """Metadata summarizing a cluster's content and coverage."""

    cluster_id: str
    summary: str
    representative_question_id: str
    metadata: dict[str, str] | None = None


@dataclass(slots=True)
class ExportRecord:
    """Represents a single QnA item in the exported dataset."""

    question_id: str
    question: str
    options: list[str]
    correct_answer_index: int
    rationale: Optional[str]
    source_documents: list[str]
    metadata: dict[str, str] | None = None

